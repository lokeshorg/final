name: Dependency Scan

on:
  workflow_dispatch:
  
jobs:
  scan-repositories:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Install jq
        run: sudo apt-get install jq
      
      - name: List Repositories
        id: list-repos
        run: |
          ORG_NAME="lokeshorg"
          REPOS_URL="https://api.github.com/orgs/${ORG_NAME}/repos"
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "${REPOS_URL}")
          echo "Response: $RESPONSE"
          REPO_NAMES=$(echo "$RESPONSE" | jq -r '.[] | .name')
          echo "::set-output name=repos::$REPO_NAMES"

      - name: Scan for Dependency
        id: scan
        run: |
          DEPENDENCY_VERSION="4.12"
          for REPO_NAME in ${{ steps.list-repos.outputs.repos }}; do
            echo "Scanning repository: $REPO_NAME"
            POM_URL_ROOT="https://api.github.com/repos/${ORG_NAME}/${REPO_NAME}/contents/pom.xml"
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$POM_URL_ROOT")
            content=$(echo "$RESPONSE" | jq -r '.content')
            decoded_content=$(echo "$content" | base64 --decode)
            if grep -q "<junit.version>${DEPENDENCY_VERSION}</junit.version>" <<< "$decoded_content"; then
              echo "Repository with junit.version ${DEPENDENCY_VERSION} found: $REPO_NAME"
              if [ -z "$REPOS_WITH_DEPENDENCY" ]; then
                REPOS_WITH_DEPENDENCY="$REPO_NAME"
              else
                REPOS_WITH_DEPENDENCY="$REPOS_WITH_DEPENDENCY, $REPO_NAME"
              fi
            fi
          done

      - name: Output Results
        if: steps.scan.outputs.repos != '' && steps.scan.outputs.repos != 'null'
        run: |
          echo "Repositories with junit.version ${DEPENDENCY_VERSION}: $REPOS_WITH_DEPENDENCY"
      - name: No Results Found
        if: steps.scan.outputs.repos == '' || steps.scan.outputs.repos == 'null'
        run: echo "No repositories with junit.version ${DEPENDENCY_VERSION} found."
